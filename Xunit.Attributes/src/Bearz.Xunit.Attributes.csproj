<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>$(LibFx);net461</TargetFrameworks>
    <Nullable>enable</Nullable>
    <RootNamespace>Xunit.Attributes</RootNamespace>
    <!-- 
       Dotnet/msbuild needs IsTestProject false, otherwise it creates errors
       about not finding the testhost.dll by assuming this project is a test
       project.
     -->
    <IsTestProject>false</IsTestProject>
    <PackageProjectUrl>$(BaseTreeUrl)Xunit.Attributes</PackageProjectUrl>
  </PropertyGroup>

  <PropertyGroup>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageTags>xunit attributes bearz</PackageTags>
    <Description>
A test framework that extends Xunit.net to enable dependency injection,
skipptable attributes, and extensible Asserts with extension methods. The
Bearz.Xunit.Attributes project contains attributes that extends the Fact
Attribute and auto tags the test so that the tests can be filtered by the
given tag
    </Description>
    <PackageReleaseNotes>$([System.IO.File]::ReadAllText("$(MSBuildProjectDirectory)/CHANGELOG.md"))</PackageReleaseNotes>
  </PropertyGroup>

  <ItemGroup>
    <None Include="README.md" Pack="true" PackagePath="\" />
    <None Include="LICENSE.md" Pack="true" PackagePath="\" />
  </ItemGroup>

  <ItemGroup>
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
      <_Parameter1>$(AssemblyName).Tests</_Parameter1>
    </AssemblyAttribute>
  </ItemGroup>

  <ItemGroup>
    <Compile Include="..\..\Xunit.Asserts\src\Sdk\DynamicSkipToken.cs" Link="DynamicSkipToken.cs" />
  </ItemGroup>


    <ItemGroup>
    <PackageReference Include="NuGet.Frameworks" />
    <PackageReference Include="System.Runtime.InteropServices.RuntimeInformation" />
    <PackageReference Include="xunit.core" />
  </ItemGroup>
</Project>
